
			CREATE TYPE order_events AS ENUM (
			
				'insert'			
			,
				'update'			
			,
				'set_temp'			
			,
				'unset_temp'			
						
			);
			ALTER TYPE order_events OWNER TO beton;
		
	CREATE OR REPLACE FUNCTION enum_order_events_descr(order_events)
	RETURNS varchar AS $$
		SELECT
		CASE $1
			
			WHEN 'insert'::order_events THEN 'Добавление'
			
			WHEN 'update'::order_events THEN 'Изменение'
			
			WHEN 'set_temp'::order_events THEN 'В черновик'
			
			WHEN 'unset_temp'::order_events THEN 'Из черновика'
			
			ELSE '---'
		END;		
	$$ LANGUAGE sql;	
	ALTER FUNCTION enum_order_events_descr(order_events) OWNER TO beton;
	
	--list view
	CREATE OR REPLACE VIEW enum_list_order_events AS
	
		SELECT 'insert'::order_events AS id, enum_order_events_descr('insert'::order_events) AS descr
	
		UNION ALL
		
		SELECT 'update'::order_events AS id, enum_order_events_descr('update'::order_events) AS descr
	
		UNION ALL
		
		SELECT 'set_temp'::order_events AS id, enum_order_events_descr('set_temp'::order_events) AS descr
	
		UNION ALL
		
		SELECT 'unset_temp'::order_events AS id, enum_order_events_descr('unset_temp'::order_events) AS descr
	;
	ALTER VIEW enum_list_order_events OWNER TO beton;
	
			
				
			
			
			
			
			
		
			
			
			
			
		
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
						
		
			
			
			
			
			
			
			
			
			
						
		
			
			
			
			
			
			
		
			
			
			
			
			
			
		
			
			
			
			
			
			
			
						
		
			
			
			
		
			
			
						
			
			
			
			
			
			
						
						
						
						
									
		
			
			
			
						
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
		
			
				
			
			
			
			
			
			
		
			
			
			
			
			
			
			
		
			
			
			
			
			
			
		
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
						
		
			
			
			
			
			
		
			
			
			
			
		
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
						
			
						
			
						
									
						
		
			
			
			
			
			
						
			
			
			
			
			
			
			
		
			
			
			
			
			
						
			
						
			
			
		
			
			
			
			
						
			
			
			
			
			
			
			
						
						
			
			
			
		
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
						
			
						
			
						
		
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
		
			
			
			
			
			
			
									
			
												
			
			
			
			
			
			
		
			
			
			
			
			
		
			
			
			
						
			
		
			
			
			
			
			
			
			
			
						
			
			
			
			
		
			
			
			
			
			
			
		
			
		
			
		
			
		
			
			
			
			
			
			
			
			
			
			
				
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
						
			
			
			
			
			
			
							
			
			
			
			
					
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
						
		
			
			
			
			
			
			
		
			
			
			
									
			
			
			
			
			
					
			
			
			
			
			
			
						
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
						
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
						
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
		
			
			
			
			
			
		
			
			
			
		
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
						
		
			Отображает состояние ТС от трэкера
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
			Отображает состояние ТС от трэкера + информация по активной для ТС заявке
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
						
			
			
			
		
			
			
			
			
			
			
			
			
			
		
			
			
			
			
			
		
CREATE OR REPLACE VIEW doc_material_procurements_register_list AS 

SELECT
	'material'::text AS reg_id,
	get_reg_types_descr('material'::reg_types)::text AS reg_name
;

ALTER VIEW doc_material_procurements_register_list OWNER TO beton;


--doc actions

CREATE OR REPLACE FUNCTION doc_material_procurements_get_actions(IN in_doc_id int)
  RETURNS TABLE(reg_id text, reg_name text, deb boolean, dimensions text, attributes text, facts text) AS
$BODY$
BEGIN
RETURN QUERY

SELECT
	'material'::text AS reg_id,
	get_reg_types_descr('material'::reg_types)::text AS reg_name,
	ra_materials.deb,
	raw_materials. AS dimensions,
	'' AS attributes,
	
		COALESCE(ra_materials.quant,0)::text
	 AS facts
	FROM ra_materials	
	LEFT JOIN raw_materials ON raw_materials.id=ra_materials.material_id
	WHERE doc_type='material_procurement'::doc_types AND doc_id=in_doc_id	
;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE COST 100;
  
ALTER FUNCTION doc_material_procurements_get_actions(IN in_doc_id int) OWNER TO beton;;

CREATE OR REPLACE VIEW doc_material_inventories_register_list AS 

SELECT
	'material'::text AS reg_id,
	get_reg_types_descr('material'::reg_types)::text AS reg_name
;

ALTER VIEW doc_material_inventories_register_list OWNER TO beton;


--doc actions

CREATE OR REPLACE FUNCTION doc_material_inventories_get_actions(IN in_doc_id int)
  RETURNS TABLE(reg_id text, reg_name text, deb boolean, dimensions text, attributes text, facts text) AS
$BODY$
BEGIN
RETURN QUERY

SELECT
	'material'::text AS reg_id,
	get_reg_types_descr('material'::reg_types)::text AS reg_name,
	ra_materials.deb,
	raw_materials. AS dimensions,
	'' AS attributes,
	
		COALESCE(ra_materials.quant,0)::text
	 AS facts
	FROM ra_materials	
	LEFT JOIN raw_materials ON raw_materials.id=ra_materials.material_id
	WHERE doc_type='material_inventory'::doc_types AND doc_id=in_doc_id	
;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE COST 100;
  
ALTER FUNCTION doc_material_inventories_get_actions(IN in_doc_id int) OWNER TO beton;;
